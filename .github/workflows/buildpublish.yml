name: Build and Publish

on:
  push:
    branches: ["main"]
    paths: [".github/workflows/buildpublish.yml"]

env:
  DOCKERHUB_USERNAME: flcdrg
  REGISTRY_GITHUB: ghcr.io
  REGISTRY_DOCKERHUB: docker.io
  IMAGE_NAME: ${{ github.repository }}-myapp

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@v5.5.1
        with:
          images: |
            ${{ env.REGISTRY_GITHUB }}/${{ env.IMAGE_NAME }}
            ${{ env.IMAGE_NAME }}

      - name: Build Docker image
        id: build-and-push
        uses: docker/build-push-action@v6.7.0
        with:
          context: .
          push: false
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          load: true # Make image available locally

      - name: List Docker images
        run: docker images

      - name: Save Docker image to tar.gz
        run: docker save ${{ env.REGISTRY_GITHUB }}/${{ env.IMAGE_NAME }}:latest -o myapp.tar | gzip > myapp.tar.gz

      # publish artifact
      - name: Publish artifact
        uses: actions/upload-artifact@v4
        with:
          name: myapp
          path: myapp.tar.gz

  publish:
    runs-on: ubuntu-latest
    needs: build

    permissions:
      contents: read
      packages: write
      attestations: write
      id-token: write

    steps:
      - uses: actions/download-artifact@v4
        with:
          name: myapp

      - name: Import Docker image from tar.gz
        run: |
            docker import myapp.tar.gz ${{ env.REGISTRY_GITHUB }}/${{ env.IMAGE_NAME }}:latest
            docker tag ${{ env.REGISTRY_GITHUB }}/${{ env.IMAGE_NAME }}:latest ${{ env.IMAGE_NAME }}:latest

      # List docker images
      - name: List Docker images
        run: docker images --digests

      # Publish Docker image
      - name: Log in to the Container registry
        uses: docker/login-action@v3.3.0
        with:
          registry: ${{ env.REGISTRY_GITHUB }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Log into registry ${{ env.REGISTRY_DOCKERHUB }}
        uses: docker/login-action@v3.3.0
        with:
          registry: ${{ env.REGISTRY_DOCKERHUB }}
          username: ${{ env.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: List Docker logins
        run: cat ~/.docker/config.json
  
      - name: Push Docker image to GitHub
        run: docker push ${{ env.REGISTRY_GITHUB }}/${{ env.IMAGE_NAME }}:latest

      - name: Push Docker image to DockerHub
        run: docker push ${{ env.IMAGE_NAME }}:latest

      - name: Get digest of the image
        id: getdigest
        run: |
            docker inspect ${{ env.REGISTRY_GITHUB }}/${{ env.IMAGE_NAME }}:latest
            echo ""
            digest=$(docker inspect --format='{{index .RepoDigests 0}}' ${{ env.REGISTRY_GITHUB }}/${{ env.IMAGE_NAME }}:latest | grep -o 'sha256:.*')
            echo "digest: $digest"
            echo "digest=$digest" >> $GITHUB_OUTPUT

      - name: Generate artifact attestation
        uses: actions/attest-build-provenance@v1
        with:
          subject-name: ${{ env.REGISTRY_GITHUB }}/${{ env.IMAGE_NAME}}
          subject-digest: ${{ steps.getdigest.outputs.digest }}
          push-to-registry: true
